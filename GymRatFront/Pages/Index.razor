@page "/"
@using GymRatApi.Commands.UserCommands
@using GymRatApi.Dto






<PageTitle>Atlas ćwiczeń</PageTitle>
<div id="header" style="height:45px;text-align: center;color:white;background-color:midnightblue;font-size:1.2rem;line-height:45px;">
    Header
</div>

<SfSidebar Width="250px">
    <ChildContent>
        <div style="text-align: left;" class="text-content"> Sidebar </div>
        <button type="button"
        onclick=<a href="https://localhost:7265/Register">Register</a>
        </button>
        <button type="button"
                onclick=<a href="https://localhost:7265/Login">Login</a>
        </button>
    </ChildContent>
</SfSidebar>

<div class="text-content" style="text-align: center;">Main content</div>

<html>
<body>
<button type="button"
onclick=<a href="https://localhost:7265/TrainingScheulde">TrainingSchedule</a>
</button>

<p id="demo"></p>

</body>
</html> 



<style>
    .control-container .e-btn.e-inherit {
        margin: 0 3px;
    }
</style>


<html>
<body>

<h2>Oto co możesz osiągnąć trzymając się planu</h2>
<p>dodawaj ćwiczenia rozsądnie, dbaj o dietę i treningi a bramy niewyobrażalnej formy staną przed Tobą otworem</p>

<img src="https://nafakcie.pl/wp-content/uploads/2022/09/zyzz-poza-min-1024x752.jpg" width="500" height="600">

</body>
</html>




 
<div class="exercise-contener">
    @foreach(var exercise in exercises)
    {
        <div class="exercise-item" >
            <EditForm Model="@exercise" OnSubmit="HandleValidSubmit" >
                <InputText @bind-Value="exercise.Name" />
                <button type="submit">Zapisz</button>
            </EditForm>
            
          <ol><li><p>@exercise.Name</p></li></ol>
          <ul style="list-style-type:none;"><li><p>@exercise.Description</p></li></ul>
        </div>
    }        
</div>

<style>
    .e-sidebar {
        background-color: #f8f8f8;
        color: black;
    }

    .text-content {
        font-size: 1.5rem;
        padding: 3rem;
    }

    .main > div {
        padding: 0px !important;
    }
</style>




@code 
{
    private List<ExerciseDto> exercises = new();
    private UserDto user = new();


    protected override async Task OnInitializedAsync()
    {
        var taskExercise = FetchExerciseData();

    }

    private async Task FetchExerciseData()
    {
        var client = new HttpClient();
        var respArray = await client.GetFromJsonAsync<List<ExerciseDto>>("https://localhost:7060/Exercise");

        if (respArray != null)
        {
            exercises = respArray;
            InvokeAsync(StateHasChanged);
        }
    }

    private async void HandleValidSubmit(EditContext e)
    {
        var exerciseDto = e.Model as ExerciseDto;

        var client = new HttpClient();

        var response = await client.PostAsJsonAsync("https://localhost:7060/Exercise/", exerciseDto);

    }
   


   
}