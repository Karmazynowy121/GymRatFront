@page "/trainingpage/{Id}"
@using GymRatApi.Commands.TrainingCommands;
@using GymRatApi.Dto;

<div class="training-edit">
    @if (Training is not null)
    {
        <EditForm Model="@Training" OnSubmit="HandleValidSubmit">
            <InputText @bind-Value="Training.Description" />
            <InputNumber @bind-Value="Training.TrainingDuration" />
            <InputNumber @bind-Value="Training.Interval" />
            <button type="submit">Edytuj</button>
        </EditForm>

    }
</div>
@code {

    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public TrainingDto Training { get; set; }
    //private TrainingDto trainingData;

    protected override async Task OnInitializedAsync()
    {
        Training = await FetchTrainingData();
    }

    private async Task<TrainingDto> FetchTrainingData()
    {
        var client = new HttpClient();
        return await client.GetFromJsonAsync<TrainingDto>($"https://localhost:7060/training/{Id}");
    }
    private async void HandleValidSubmit(EditContext e)
    {
        var trainingDto = e.Model as TrainingDto;
        if (trainingDto is not null)
        {
            var trainingUpdateCommand = new TrainingUpdateCommand()
            {
                Id = trainingDto.Id,
                Description = trainingDto.Description,
                Interval = trainingDto.Interval,
                TrainingDuration= trainingDto.TrainingDuration,
                TrainingScheuldeId = trainingDto.TrainingScheuldeId
            };


           var client = new HttpClient();
            var response = await client.PostAsJsonAsync<TrainingUpdateCommand>($"https://localhost:7060/training/", trainingUpdateCommand);
        }
    }
}
