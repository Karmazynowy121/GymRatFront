@page "/TrainingScheulde"
@using GymRatApi.Dto

@attribute [Authorize]

<PageTitle>TrainingScheulde</PageTitle>




<div class="training-scheulde-contener">
    <div class="page-header">
        <div class="page-header-informations">
            <h2>Harmonogram treiningowy</h2>
            <span>Przeglądaj lub edytuj swoje harmonogramy treningowe</span>
        </div>
    </div>

    <div class="input-group training-scheulde-select-container">
        <label class="training-scheulde-label">Wyberz harmonogram z listy</label>
        <select class="form-select" aria-label="Default select example" @onchange="SelectChangeEvent">
           @foreach(var trainingScheulde in trainingScheuldes)
           {
              <option value="@trainingScheulde.Name">@trainingScheulde.Name</option>
           }
        </select>
    </div>



    <TrainingScheuldeDetails TrainingScheulde="@selectedTrainingScheulde" />
    
</div>
>

@code {
    private List<TrainingScheuldeDto> trainingScheuldes = new();
    private TrainingScheuldeDto selectedTrainingScheulde;

    private void SelectChangeEvent(ChangeEventArgs e)
    {
        Console.WriteLine(e);
        selectedTrainingScheulde = trainingScheuldes.FirstOrDefault(t => t.Name == e.Value.ToString());
    }
    protected override async Task OnInitializedAsync()
    {
        var taskTrainingScheulde = FetchTrainingScheuldeData();
    }

    private async Task FetchTrainingScheuldeData()
    {
        var client = new HttpClient();
        var respArray = await client.GetFromJsonAsync<List<TrainingScheuldeDto>>("https://localhost:7060/TrainingScheulde");
        if (respArray != null)
        {
            trainingScheuldes = respArray;
            selectedTrainingScheulde = respArray.FirstOrDefault();
            InvokeAsync(StateHasChanged);
        }
    }

}
